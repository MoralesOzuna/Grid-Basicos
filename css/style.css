:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}
html {
    font-size: 62.5%; /** 1REM = 10pX **/
}

body {
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
}

.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    margin-bottom: 2rem;
}

/* 01 */


.grid-1{
    display: grid;
}

/* 02 */
.grid-2{
    display: grid;
    grid-template-columns: repeat(3, 300px);
}

.grid-2 .box:nth-child(2){
    grid-column: 1/2
}

/* 03 */

.grid-3 {
    display: grid;
    grid-template-rows: repeat(6, 300px);
    grid-template-columns: repeat(3, 300px);
}

.grid-3 .box:nth-child(2){
    grid-row: 1/2;
 
}

/* 4 */

.grid-4{
    display: grid;
    grid-template-rows: repeat(2, 300px);
    grid-template-rows: repeat(3, 300px);
}

.grid-4 .box:nth-child(2){
    grid-column: 2/4;
    grid-row: 1 / 3;
}


/* 05 */

.grid-5 {
    display: grid;

    grid: repeat(2, 300px) / repeat(3, 300px); ;
}



/* 06 */

.grid-6{
    display: grid;
    grid: repeat(2, 300px) / repeat(3, 300px); 
    grid-auto-flow: dense; /* ARREGLA EL FLUJO NATURAL DE FLEXBOX */
 
}

.grid-6 .box:nth-child(2){
    grid-column: 1/2;
}

/* 07 */


.grid-7{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid: repeat(2, 1fr) / repeat(3, 1fr);

}

/* 8 */

.grid-8{
    display: grid;
    grid: repeat(2, 20rem) / repeat(3, 1fr);
    gap: 4rem 2rem; /* row y column */
}

.grid-8 .box{
    margin: 0;
}

/* 9 grip areas */
.grid-9{
    display: grid;
    height: 120rem;
    grid-template-areas:   "header header header"
                            "nav nav nav"
                            "contenido contenido sidebar"
                            "footer footer footer";

    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 2.5fr 1fr 6fr 2.5fr /* 250px 10rem 60rem 25rem */; /* header nav principal sidebar footer */
    gap: 4rem;
}

.grid-9 .box{
    margin: 0;
}

.grid-9 .box:nth-child(1){
    grid-area: header; /* Se posiciona en las areas con este nombre */
}

.grid-9 .box:nth-child(2){
    grid-area: nav; /* Se posiciona en las areas con este nombre */
}

.grid-9 .box:nth-child(3){
    grid-area: contenido;
}

.grid-9 .box:nth-child(5){
    grid-area: footer;
}

/* 10 grid template (shorhand)*/
.grid-10{
    display: grid;
    height: 120rem;
    grid-template:   "header header header" 2.5fr
                            "nav nav nav" 1fr
                            "contenido contenido sidebar" 6fr
                            "footer footer footer" 2.5fr / 1fr 1fr 1fr;

    gap: 4rem;
}

.grid-10 .box{
    margin: 0;
}

.grid-10 .box:nth-child(1){
    grid-area: header; /* Se posiciona en las areas con este nombre */
}

.grid-10 .box:nth-child(2){
    grid-area: nav; /* Se posiciona en las areas con este nombre */
}

.grid-10 .box:nth-child(3){
    grid-area: contenido;
}

.grid-10 .box:nth-child(5){
    grid-area: footer;
}


/* 11 */
.grid-11 {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    height: 300px;

    /* Alineamos verticalmente podemos usar estas propiedades */
    align-items: center;
    place-content: center;
    align-content: center;
}

/* 12 */
.grid-12{
    display: grid;
    grid-template-columns: repeat( auto-fill, 200px); /* genera columnas independiente del contenido, del espacio que hay, puedes tener 3 columnas de contenido, pero si caben 6, te las creara, aunque esten vacias  */
    grid-template-columns: repeat( auto-fit, 200px); /* genera columnas por cada contenido */

    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));/* 200 pixeles es lo minimo para las columnas, 1fr cuando es mas grande, funciona como mediaqueries */
}